package Prof_recommendation;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Q_1288_새로운_불면증_치료법 {
	static int res; // 문자열 분리 후 저장할 정적 변수 선언
	static boolean isZero; // 0이 맞는가?

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); // 입출력 함수 선언

		int TC = Integer.parseInt(br.readLine()); // 반복할 테스트 횟수

		for (int tc = 1; tc <= TC; tc++) { // 반복할 테스트 횟수만큼
			String line = br.readLine(); // 한 줄 통으로 읽어서 line에 저장
			int N = Integer.parseInt(line); // 양의 수 입력 받기

			int K = 1; // K를 1로 초기화

			int[] cnt = new int[10]; // 크기가 10인 1차원 카운트 배열 생성 및 초기화

			while (true) {
				for (int i = 0; i < line.length(); i++) { // 입력 받은 양의 수 자릿수만큼 반복하여 문자열 분리하기
					res = line.charAt(i) - '0'; // 교수님이 추천해주신 방법 1! // char to int
//					res = Integer.parseInt(line.substring(i, i + 1)); // 비효율적인 방법 2! 되도록이면 쓰지 않는 것이 좋을듯!
//					System.out.print(res + " "); // 분리된 숫자 하나 하나 출력
					cnt[res]++; // 카운트 빈도 구하기
//					System.out.println(cnt[res]); // 카운트 빈도 출력

				}

				isZero = false; // 0이 아니라고 가정

				for (int i = 0; i < 10; i++) { // 0부터 9까지 반복
					if (cnt[i] == 0) { // 카운트 빈도가 0인 경우
						isZero = true; // 0이 맞습니다.

					}

				}

				if (isZero == false) { // 그렇다면, 카운트 빈도가 0이 아닐 때(0 ~ 9 숫자의 빈도가 모두 1 이상 카운트 될 때)
//					System.out.println(K); // K 출력
					System.out.println("#" + tc + " " + line); // 양을 센 횟수(= N * K) 출력
					break; // 반복문 빠져나오기

				}

				K++; // K를 1씩 증가시킴.

				line = Integer.toString(N * K); // 양을 센 횟수(= N * K)를 문자열 line에 저장

			}

		}

	}

}
